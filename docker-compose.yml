version: '3.8'

services:

  # Nginx Service
  nginx:
    build: ./.docker/nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/var/www:ro
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
      - ./.docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - backend

  # Backend Service
  backend:
    build:
      context: ./.docker/backend
      target: backend
      args:
        APP_ENV: ${APP_ENV}
    restart: unless-stopped
    volumes:
      - ./:/var/www
    depends_on:
      - mysql
      - redis

  # Worker Service
  worker:
    build:
      context: ./.docker/backend
      target: worker
    restart: unless-stopped
    volumes:
      - ./:/var/www
    depends_on:
      - backend

  # MYSQL Service
  mysql:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysqldata:/var/lib/mysql
    ports:
      - 3306:3306

  # Redis Service
  redis:
    image: redis:6-alpine
    restart: unless-stopped
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redisdata:/data

  node:
    image: node:15.11-alpine
    working_dir: /var/www
    volumes:
      - ./:/var/www

#  # Scheduler Service
#  scheduler:
#    image: mcuadros/ofelia:latest
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./.docker/scheduler/config.ini:/etc/ofelia/config.ini
#    depends_on:
#      - backend

# Volumes
volumes:

  mysqldata:
    driver: local

  redisdata:
    driver: local
